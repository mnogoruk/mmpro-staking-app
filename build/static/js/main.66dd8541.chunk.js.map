{"version":3,"sources":["components/Footer.js","components/common/Button.js","components/common/Modal.js","hooks/useOnClickOutside.js","wallet/connectors.js","wallet/ethereum.js","components/common/ConnectModal.js","components/Header.js","hooks/useContracts.js","utils/getRpcUrl.js","utils/getAddress.js","hooks/contractsFunction.js","pages/TabComp.js","components/common/BorderCard.js","components/common/Spinner.js","utils/common.js","pages/FixedStake/FixedLayout.js","pages/FlexibleStake/FlexibleBox.js","pages/FlexibleStake/SelectFlexibleToken.js","pages/FlexibleStake/FlexibleLayout.js","pages/Staking.js","App.js","index.js"],"names":["className","href","target","rel","src","alt","width","color","bgColor","showBorder","onClick","children","uppercase","disabled","cx","style","borderRadius","padding","fontSize","border","fontWeight","Modal","onClose","title","ref","useRef","handler","useEffect","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","querySelector","classList","remove","backgroundColor","height","top","left","zIndex","minWidth","maxWidth","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","56","97","qrcode","bridge","switchNetwork","window","ethereum","isConnected","isMetaMask","chainId","a","request","method","params","code","rpcUrls","chainName","nativeCurrency","name","decimals","symbol","blockExplorerUrls","console","error","ConnectModal","props","useWeb3React","activate","active","opened","closeHandle","setError","initNetwork","Header","str","account","deactivate","useState","onOpen","Button","length","substr","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","library","currentProvider","useContract","abi","address","eth","Contract","useFlexibleStaking","FlexibleStake","useFixedStaking","FixedStake","useMMProContract","MMPRO","getBalanceOfToken","tokenContract","methods","balanceOf","call","res","getTotalSupply","totalSupply","TabComp","tabIndex","setTabIndex","fixedAPY","noLine","Spinner","animationDuration","size","borderWidth","borderTopColor","borderBottomColor","defaultProps","wei2eth","val","BigInt","calcAPY","contract","tokenAddr","emission","flag","tokenStakeInfo","totalStaked","getUserStakes","stakedByUserArray","sumTotalRewards","i","calcRewardsByIndex","rewards","parseInt","rewardAmount","sumOfStaked","stakeToken","amount","amount2eth","apy","parseFloat","toFixed","toString","FixedLayout","fixedStakeContract","MMProContract","initLoading","setInitLoading","actionLoading","setActionLoading","userStake","setUserStake","balance","setBalance","setAmount","stakedByUser","setStakedByUser","unstakeIndex","setUnstakeIndex","stakingOptionState","setStakingOptionState","Array","fixedStakingOption","setFixedStakingOption","firstUnstakeTime","setFirstUnstakeTime","Date","currentTime","setCurrentTime","unstakeList","setUnstakeList","allowance","setAllowance","setTimeout","initFixedStake","initValues","getStakeOptions","tmpFixedStakeOptinos","tmpBalance","unstakeLists","tmpFirstUnstake","push","id","end","approve","fromExponential","send","from","withdrawEarnings","log","usersStake","now","withdraw","stake","arg","BorderCard","value","onChange","e","map","unstake","index","key","type","option","periodInDays","placeholder","fistStaktime","diff","getTime","diffSecs","diff_in_days","Math","floor","diff_in_hours","diff_in_mins","diff_in_secs","calcUnstakeTime","FlexibleBox","selectedTokenContract","selectedTokenAddr","flexibleContract","totalRewards","setTotalRewards","setTotalStaked","optionsState","setOptionsState","initFlexibleBalance","init","withdrawAllWithRewards","claimRewards","SelectFlexibleToken","stakeTokenBoxList","flexibleAPY","flexibleStakeDowned","setFlexibleStakeDowned","stakeTokenBox","stakeTokenDataList","addr","img","FlexibleLayout","setStakeTokenBoxList","tempStakeList","stakeTokenInfo","initialize","Staking","price","mmcap","setFixedAPY","setFlexibleAPY","calcFixedAPY","calcFlexibleAPY","tempAPY","APY","numeral","format","App","networkError","mmproBalance","setMMProBalance","busdBalance","setBUSDBalance","setTotalSupply","mmCap","setMMCap","BUSDContract","BUSD","useBUSDContract","total","isAuthorized","then","Footer","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","getLibrary","provider"],"mappings":"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","file":"static/js/main.66dd8541.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"py-8\">\r\n      <footer className=\"container mx-auto px-4 flex flex-row justify-center text-center\">\r\n        <a\r\n          href=\"https://twitter.com/MarketmakingPro\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"mr-4\"\r\n        >\r\n          <img src=\"/images/sm-twitter.svg\" alt=\"\" width=\"20\" />\r\n        </a>\r\n        <a\r\n          href=\"https://t.me/market_making_pro_eng\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"mr-4\"\r\n        >\r\n          <img src=\"/images/sm-telegram.svg\" alt=\"\" width=\"20\" />\r\n        </a>\r\n        <a\r\n          href=\"http://marketmaking.pro\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"mr-4\"\r\n        >\r\n          <span>v 1.0.0RC3</span>\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nexport default ({\r\n  color = \"white\",\r\n  bgColor = \"primary\",\r\n  showBorder = false,\r\n  onClick,\r\n  className,\r\n  children,\r\n  uppercase,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={cx(\r\n        className,\r\n        uppercase ? \"uppercase\" : \"\",\r\n        showBorder ? \"border\" : \"\",\r\n        \"bg-\" + bgColor,\r\n        \"hover:bg-\" + bgColor + \"-hover\",\r\n        \"hover:border-\" + bgColor + \"-hover\",\r\n        \"text-\" + color,\r\n        \"hover:text-\" + color + \"-hover\",\r\n        \"border-\" + color,\r\n        \"hover:border-\" + color + \"-hover\",\r\n        \"focus-within:outline-none\",\r\n        \"focus-visible:outline-none\",\r\n        \"focus:outline-none\"\r\n      )}\r\n      disabled={disabled}\r\n      style={{\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\",\r\n        fontSize: \"14px\",\r\n        border: \"none\",\r\n        fontWeight: \"lighter\",\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\n\nconst Modal = ({ children, onClose, title }) => {\n  const ref = useRef(null);\n\n  const closeModal = () => {\n    document.querySelector(\"body\").classList.remove(\"overflow-hidden\");\n    onClose();\n  };\n\n  useOnClickOutside(ref, () => {\n    closeModal();\n  });\n\n  return (\n    <div\n      className=\"fixed overflow-auto flex items-center\"\n      style={{\n        backgroundColor: \"rgba(0, 0, 0, .2)\",\n        width: \"100%\",\n        height: \"100%\",\n        top: 0,\n        left: 0,\n        zIndex: 5000,\n      }}\n    >\n      <div\n        ref={ref}\n        className=\"relative p-8 border-2 border-primary rounded-md bg-white w-full max-w-md m-auto h-custom\"\n        style={{\n          minWidth: \"300px\",\n          maxWidth: \"700px\",\n        }}\n      >\n        <div className=\"flex flex-row items-center\">\n          <div className=\"text-3xl font-bold text-black\">{title}</div>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useEffect } from \"react\";\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport Web3 from \"web3\";\n\n// Chain IDs\n// These are the IDs of the Ethereum chains that MetaMask supports by default. Consult chainid.network (opens new window)for more.\n// Hex\tDecimal\tNetwork\n// 0x1\t1\tEthereum Main Network (Mainnet)\n// 0x3\t3\tRopsten Test Network\n// 0x4\t4\tRinkeby Test Network\n// 0x5\t5\tGoerli Test Network\n// 0x2a\t42\tKovan Test Network\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97],\n});\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    56: \"https://bsc-dataseed.binance.org/\",\n    97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n  },\n  qrcode: true,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nexport const getLibrary = (provider) => new Web3(provider);\n","export const ethereumConnect = () =>\n  window.ethereum.request({ method: \"eth_requestAccounts\" });\nexport const isEthereumConnected = window.ethereum\n  ? window.ethereum.isConnected()\n  : false;\nexport const isEthereumMetaMask = window.ethereum\n  ? window.ethereum.isMetaMask\n  : null;\nexport const ethereumSendTransaction = (params) =>\n  window.ethereum.request({\n    method: \"eth_sendTransaction\",\n    params,\n  });\n\nexport const switchNetwork = async (chainId) => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0x38\" }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    if (switchError.code === 4902) {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: \"0x38\",\n              rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n              chainName: \"BSC Mainnet\",\n              nativeCurrency: { name: \"BNB\", decimals: 18, symbol: \"BNB\" },\n              blockExplorerUrls: [\"https://bscscan.com/\"],\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { injected, walletconnect, switchNetwork } from \"../../wallet\";\r\n\r\nexport default function ConnectModal(props) {\r\n  const { chainId, activate, active, error } = useWeb3React();\r\n  const { opened, closeHandle, setError } = props;\r\n\r\n  useEffect(() => {\r\n    const initNetwork = async () => {\r\n      setError(56 !== chainId && active);\r\n      if (56 !== chainId) {\r\n        await switchNetwork();\r\n      }\r\n    };\r\n    initNetwork();\r\n  }, [active, chainId, error]);\r\n\r\n  return (\r\n    <>\r\n      {opened && (\r\n        <Modal title=\"ConnectWallet\" onClose={closeHandle}>\r\n          <div className=\"flex flex-col\">\r\n            <button\r\n              className=\"flex flex-row items-center m-1 p-1 border-black rounded-md border-solid border-2 cursor-pointer\"\r\n              onClick={() => {\r\n                activate(injected);\r\n                // setProvider(\"coinbaseWallet\");\r\n                closeHandle();\r\n              }}\r\n            >\r\n              <img\r\n                src=\"/images/wallet/metamask.svg\"\r\n                alt=\"metamask\"\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className=\"mr-3\"\r\n              />\r\n              <p className=\"text-black\">Metamask</p>\r\n            </button>\r\n            <button\r\n              className=\"flex flex-row items-center m-1 p-1 border-black rounded-md border-solid border-2 cursor-pointer\"\r\n              onClick={() => {\r\n                activate(walletconnect);\r\n                // setProvider(\"coinbaseWallet\");\r\n                closeHandle();\r\n              }}\r\n            >\r\n              <img\r\n                src=\"/images/wallet/trustwallet.svg\"\r\n                alt=\"metamask\"\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className=\"mr-3\"\r\n              />\r\n              <p className=\"text-black\">Wallet connect</p>\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./common/Button.js\";\r\nimport ConnectModal from \"./common/ConnectModal.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nconst Header = () => {\r\n  const { account, deactivate, active } = useWeb3React();\r\n  const [onOpen, onClose] = useState(false);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [error, setError] = useState(false);\r\n\r\n  const disconnect = () => {\r\n    deactivate();\r\n  };\r\n\r\n  function truncate(str) {\r\n    return str.length > 0\r\n      ? str.substr(0, 6) + \"...\" + str.substr(str.length - 4, str.length - 1)\r\n      : str;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header className=\"container px-4 mx-auto py-4\">\r\n        <div className=\"flex flex-row justify-between items-center w-full\">\r\n          <div>\r\n            <a href=\"/#\">\r\n              <img\r\n                src=\"/images/full-logo.png\"\r\n                width=\"180\"\r\n                className=\"cursor-pointer\"\r\n                alt=\"FStaking\"\r\n              />\r\n            </a>\r\n          </div>\r\n          {!active ? (\r\n            <Button\r\n              onClick={() => {\r\n                onClose(true);\r\n              }}\r\n            >\r\n              Connect Wallet\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={disconnect} bgColor=\"secondary\">\r\n              {truncate(account)}\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </header>\r\n      <ConnectModal\r\n        opened={onOpen}\r\n        setError={setError}\r\n        closeHandle={() => {\r\n          onClose(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Web3 from \"web3\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport {\n  getBUSDAddress,\n  getFixedStakingAddress,\n  getFlexibleStakingAddress,\n  getLPAddress,\n  getMMProAddress,\n} from \"../utils/getAddress\";\n// import MMPRO from \"../contracts/MMPRO.json\";\nimport FlexibleStake from \"../contracts/FlexibleStake.json\";\nimport FixedStake from \"../contracts/FixedStake.json\";\nimport LPContract from \"../contracts/LPContract.json\";\nimport MMPRO from \"../contracts/MMPRO.json\";\nimport BUSD from \"../contracts/Busd.json\";\nimport getRpcUrl from \"../utils/getRpcUrl\";\n\nconst RPC_URL = getRpcUrl();\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, {\n  timeout: 10000,\n});\n\nexport const useWeb3 = () => {\n  const { library } = useWeb3React();\n  let web3;\n  if (library) {\n    web3 = new Web3(library.currentProvider || httpProvider);\n  } else {\n    web3 = new Web3(httpProvider);\n  }\n  return web3;\n};\n\nconst useContract = (abi, address) => {\n  const web3 = useWeb3();\n  return new web3.eth.Contract(abi, address);\n};\n\nexport const useFlexibleStaking = () => {\n  const abi = FlexibleStake.abi;\n  return useContract(abi, getFlexibleStakingAddress());\n};\n\nexport const useFixedStaking = () => {\n  const abi = FixedStake.abi;\n  return useContract(abi, getFixedStakingAddress());\n};\n\nexport const useLPContract = () => {\n  const abi = LPContract.abi;\n  return useContract(abi, getLPAddress());\n};\n\nexport const useBUSDContract = () => {\n  const abi = BUSD.abi;\n  return useContract(abi, getBUSDAddress());\n};\n\nexport const useMMProContract = () => {\n  const abi = MMPRO.abi;\n  return useContract(abi, getMMProAddress());\n};\n","const getRpcUrl = () => {\r\n  return \"https://bsc-dataseed.binance.org/\";\r\n};\r\n\r\nexport default getRpcUrl;\r\n","export const getFlexibleStakingAddress = () => {\n  return \"0x5450eaE65710b5fE19E5e20CFDeA9b9feb63fa1b\";\n};\n\nexport const getFixedStakingAddress = () => {\n  return \"0x1eDdc700755165438FAD7181AF92eE8Fb816Cd87\";\n};\n\nexport const getBUSDAddress = () => {\n  return \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n};\n\nexport const getMMProAddress = () => {\n  return \"0x6067490d05F3cF2fdFFC0e353b1f5Fd6E5CCDF70\";\n};\n\nexport const getLPAddress = () => {\n  return \"0x656aa2eaa2f0ef876686c76c36a010e0f4d1e4a3\";\n};\n","export const getTVLInfo = async (web3, contract, account, address) => {\n  const res = await contract.methods.tokenStakeInfo(address).call();\n  return res;\n};\n\nexport const getBalanceOfToken = async (tokenContract, address) => {\n  const res = await tokenContract.methods.balanceOf(address).call();\n  return res;\n};\n\nexport const getTotalSupply = async (tokenContract) => {\n  const res = await tokenContract.methods.totalSupply().call();\n  return res;\n};\n","import React from \"react\";\n\nexport default function TabComp(props) {\n  const { tabIndex, setTabIndex, fixedAPY } = props;\n\n  return (\n    <div>\n      <div className=\"w-full mx-0 mt-4 mb-1 rounded\">\n        <ul className=\"flex justify-start\">\n          <li\n            onClick={() => setTabIndex(1)}\n            className={\n              tabIndex === 1\n                ? \"text-sm border-none py-1 px-4 rounded-md text-black mr-1 cursor-default bg-white\"\n                : \"text-sm text-white py-1 px-4 mr-1 cursor-pointer bg-none\"\n            }\n          >\n            <p className=\"font-normal  m-0 p-0\">Flexible Stake</p>\n          </li>\n          <li\n            onClick={() => setTabIndex(2)}\n            className={\n              tabIndex === 2\n                ? \"text-sm border-none py-1 px-4 rounded-md text-black mr-1 cursor-default bg-white\"\n                : \"text-sm text-white py-1 px-4 mr-1 cursor-pointer bg-none\"\n            }\n          >\n            <p className=\"font-light  m-0 p-0\">Fixed Stake ({fixedAPY})</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default ({ title, className, noLine, children }) => {\n  return (\n    <div\n      className={\n        \"w-full rounded-lg pb-4 border-white border-2 border-solid\" +\n        (className ? className : \"\")\n      }\n    >\n      <div\n        className={`text-center font-Montserrat-ExtraBold text-white text-2xl uppercase pt-3 pb-2 ${\n          noLine ? \"\" : \"border-b border-dashed border-white\"\n        }`}\n      >\n        {title}\n      </div>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = ({ animationDuration, size, color }) => {\n  return (\n    <div\n      className=\"half-circle-spinner\"\n      style={{\n        height: `${size}px`,\n        width: `${size}px`,\n      }}\n    >\n      <div\n        className=\"circle circle-1\"\n        style={{\n          borderWidth: `${size / 10}px`,\n          animationDuration: `${animationDuration}ms`,\n          borderTopColor: color,\n        }}\n      />\n      <div\n        className=\"circle circle-2\"\n        style={{\n          borderWidth: `${size / 10}px`,\n          animationDuration: `${animationDuration}ms`,\n          borderBottomColor: color,\n        }}\n      />\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n  animationDuration: 1000,\n  size: 40,\n  color: \"#2c6fa5\",\n};\n\nexport default Spinner;\n","/* eslint-disable no-undef */\r\nexport const wei2eth = (val) => {\r\n  if (val) {\r\n    return BigInt(val) / BigInt(1000000000000000000);\r\n  }\r\n  return BigInt(0);\r\n};\r\n\r\nexport const calcAPY = async (contract, tokenAddr, emission, flag, account) => {\r\n  var totalStaked;\r\n  var rewardAmount;\r\n  var i;\r\n  if (flag) {\r\n    totalStaked = (await contract.methods.tokenStakeInfo(tokenAddr).call())\r\n      .totalStaked;\r\n    const stakedByUserArray = await contract.methods\r\n      .getUserStakes(account)\r\n      .call();\r\n    var sumTotalRewards = 0;\r\n    for (i = 0; i < stakedByUserArray.length; i++) {\r\n      const rewards = await contract.methods\r\n        .calcRewardsByIndex(account, i)\r\n        .call();\r\n      sumTotalRewards += parseInt(rewards);\r\n    }\r\n    rewardAmount = sumTotalRewards;\r\n  } else {\r\n    const stakedByUserArray = await contract.methods\r\n      .getUserStakes(account)\r\n      .call();\r\n    var sumOfStaked = 0;\r\n    var rewards = 0;\r\n    for (i = 0; i < stakedByUserArray.length; i++) {\r\n      if (stakedByUserArray[i].stakeToken === tokenAddr) {\r\n        sumOfStaked += parseInt(stakedByUserArray[i].amount);\r\n        rewards += parseInt(stakedByUserArray[i].rewards);\r\n      }\r\n    }\r\n    totalStaked = sumOfStaked;\r\n    rewardAmount = rewards;\r\n  }\r\n  totalStaked = totalStaked / 10 ** 18;\r\n  var amount2eth = rewardAmount / 10 ** 18;\r\n  if (totalStaked && amount2eth) {\r\n    const shareRate = (amount2eth * 100) / (totalStaked + amount2eth);\r\n    const currentRewardsPerday = (shareRate * emission) / 100;\r\n    const estAnnualRewards = currentRewardsPerday * 365;\r\n    const apy = parseFloat((estAnnualRewards * 100) / amount2eth).toFixed(2);\r\n    return apy.toString() + \"%\";\r\n  }\r\n  return \"0%\";\r\n};\r\n","/* eslint-disable no-undef */\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../../components/common/Button\";\nimport BorderCard from \"../../components/common/BorderCard\";\nimport Spinner from \"../../components/common/Spinner\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useFixedStaking, useMMProContract } from \"../../hooks/useContracts\";\nimport {\n  getFixedStakingAddress,\n  getMMProAddress,\n} from \"../../utils/getAddress\";\nimport { wei2eth } from \"../../utils/common\";\nimport fromExponential from \"from-exponential\";\n\nconst NOLOADING = 0;\nconst APPROVELOADING = 1;\nconst STAKELOADING = 2;\nconst UNSTAKELOADING = 3;\n\nexport default function FixedLayout(props) {\n  // const { setFixedAPY } = props;\n  const { active, account } = useWeb3React();\n  const fixedStakeContract = useFixedStaking();\n  const MMProContract = useMMProContract();\n  const [initLoading, setInitLoading] = useState(false);\n  const [actionLoading, setActionLoading] = useState(false);\n  const [userStake, setUserStake] = useState();\n  const [balance, setBalance] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const [stakedByUser, setStakedByUser] = useState(0);\n  const [unstakeIndex, setUnstakeIndex] = useState(0);\n  const [stakingOptionState, setStakingOptionState] = useState(0);\n  const [fixedStakingOption, setFixedStakingOption] = useState(Array);\n  const [firstUnstakeTime, setFirstUnstakeTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [unstakeList, setUnstakeList] = useState([]);\n  const [allowance, setAllowance] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n  }, [currentTime]);\n\n  useEffect(() => {\n    const initValues = async () => {\n      setInitLoading(true);\n      await initFixedStake();\n      setInitLoading(false);\n    };\n    if (active) {\n      initValues();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [active]);\n\n  const initFixedStake = async () => {\n    const tmpFixedStakeOptinos = await fixedStakeContract.methods\n      .getStakeOptions(getMMProAddress())\n      .call();\n    const tmpBalance = await MMProContract.methods.balanceOf(account).call();\n    const stakedByUserArray = await fixedStakeContract.methods\n      .getUserStakes(account)\n      .call();\n    const allowance = await MMProContract.methods\n      .allowance(account, getFixedStakingAddress())\n      .call();\n\n    var sumOfStaked = 0;\n    var unstakeLists = [];\n    var tmpFirstUnstake = 99999999999999999999;\n    for (var i = 0; i < stakedByUserArray.length; i++) {\n      if (stakedByUserArray[i].stakeToken === getMMProAddress()) {\n        sumOfStaked += parseInt(stakedByUserArray[i].amount);\n      }\n      if (stakedByUserArray[i].amount > 0) {\n        unstakeLists.push({ id: i, amount: stakedByUserArray[i].amount });\n      }\n      tmpFirstUnstake =\n        parseInt(tmpFirstUnstake) > parseInt(stakedByUserArray[i].end)\n          ? parseInt(stakedByUserArray[i].end)\n          : parseInt(tmpFirstUnstake);\n    }\n    setAmount(0);\n    setAllowance(allowance);\n    setBalance(tmpBalance);\n    setStakedByUser(sumOfStaked);\n    setUserStake(stakedByUserArray);\n    setUnstakeList(unstakeLists);\n    setFixedStakingOption(tmpFixedStakeOptinos);\n    setFirstUnstakeTime(tmpFirstUnstake);\n  };\n\n  const approve = async () => {\n    setActionLoading(APPROVELOADING);\n    const amount2eth = fromExponential(10 ** 10 * 10 ** 18);\n    await MMProContract.methods\n      .approve(getFixedStakingAddress(), amount2eth)\n      .send({ from: account });\n    await initFixedStake();\n    setActionLoading(NOLOADING);\n  };\n\n  const withdrawEarnings = async () => {\n    if (userStake.length === 0) {\n      console.log(\"No earning yet!\");\n      return;\n    }\n    setActionLoading(UNSTAKELOADING);\n    try {\n      const s = await fixedStakeContract.methods\n        .usersStake(account, unstakeList[unstakeIndex][\"id\"])\n        .call();\n      if (s.end < Date.now() / 1000) {\n        await fixedStakeContract.methods\n          .withdraw(getMMProAddress(), unstakeList[unstakeIndex][\"id\"])\n          .send({ from: account });\n      } else {\n        setError(\"Not availalbe to Claim\");\n      }\n    } catch (err) {\n      if (err.code !== 4001) {\n        console.error(err);\n      }\n      console.error(err);\n    }\n    await initFixedStake();\n    setActionLoading(NOLOADING);\n  };\n\n  const stake = async () => {\n    const arg = fromExponential(amount * 10 ** 18);\n    try {\n      const allowance = await MMProContract.methods\n        .allowance(account, getFixedStakingAddress())\n        .call();\n      if (allowance < arg) {\n        await approve();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n    setActionLoading(STAKELOADING);\n    try {\n      await fixedStakeContract.methods\n        .stake(getMMProAddress(), arg, stakingOptionState)\n        .send({ from: account });\n    } catch (err) {\n      if (err.code !== 4001) {\n        console.error(err);\n      }\n      console.error(err);\n    }\n    await initFixedStake();\n    setActionLoading(NOLOADING);\n  };\n\n  const onStakeOptionSelectChanged = (e) => {\n    setStakingOptionState(e.target.value);\n  };\n\n  const calcUnstakeTime = (fistStaktime) => {\n    if (firstUnstakeTime >= 99999999999999999999) {\n      return \"00h 00m 00s\";\n    }\n    const date = new Date(fistStaktime * 1000);\n    const diff = date.getTime() - currentTime.getTime();\n    if (diff <= 0) {\n      return \"00h 00m 00s\";\n    }\n\n    const diffSecs = diff / 1000;\n    const diff_in_days = Math.floor(diffSecs / 3600 / 24).toFixed(0);\n    const diff_in_hours = Math.floor((diffSecs % (3600 * 24)) / 3600).toFixed(\n      0\n    );\n    const diff_in_mins = Math.floor(\n      ((diffSecs % (3600 * 24)) % 3600) / 60\n    ).toFixed(0);\n    const diff_in_secs = Math.floor((diffSecs % (3600 * 24)) % 3600) % 60;\n    return `${diff_in_days}d ${diff_in_hours}h ${diff_in_mins}m ${diff_in_secs}s`;\n  };\n\n  return (\n    <div className=\"grid grid-col-1 gap-6 w-full\">\n      {!active && <div className=\"text-center\">Connect Wallet</div>}\n      {initLoading && <div className=\"text-center\">Loading...</div>}\n      {!initLoading && active && (\n        <div className=\"grid grid-col-1 md:grid-cols-2 card-bg rounded-lg p-4 gap-6 my-2 w-full\">\n          <BorderCard title=\"Your / Total Staked MMPRO\">\n            <div className=\"flex flex-col pt-8 pb-4 text-white\">\n              <div className=\"text-center\">\n                <span className=\"text-white text-2xl ml-2\">Yours</span>\n                <span className=\"text-white text-5xl\">\n                  {parseFloat(wei2eth(stakedByUser)).toFixed(2)}\n                </span>\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\n                <br />\n              </div>\n            </div>\n          </BorderCard>\n\n          <BorderCard title=\"Your Earnings\">\n            <div className=\"flex flex-col pt-8 px-2\">\n              {userStake && userStake.length <= 0 ? (\n                <p className=\"text-center text-2xl\">No eanring yet</p>\n              ) : (\n                <>\n                  <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\n                    <select\n                      value={unstakeIndex}\n                      onChange={(e) => setUnstakeIndex(e.target.value)}\n                      className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                    >\n                      {userStake &&\n                        userStake.map((unstake, index) => (\n                          <option key={index} value={index}>\n                            {parseFloat(wei2eth(unstake.amount)).toFixed(2)}(\n                            {parseFloat(wei2eth(unstake.rewards)).toFixed(2)})\n                          </option>\n                        ))}\n                      ;\n                    </select>\n                  </div>\n                  <div className=\"flex flex-row justify-center mt-2\">\n                    <Button\n                      type=\"submit\"\n                      className=\"flex flex-row items-center justify-center w-48\"\n                      onClick={() => withdrawEarnings()}\n                    >\n                      {actionLoading === UNSTAKELOADING ? (\n                        <Spinner size={30} />\n                      ) : (\n                        <>\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\n                          <span className=\"w-64\">Unstake & Claim</span>{\" \"}\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </>\n              )}\n            </div>\n          </BorderCard>\n\n          <BorderCard title=\"Staking\">\n            <div className=\"flex flex-col pt-8 px-2\">\n              <div className=\"text-center pb-4\">\n                <span className=\"text-lg text-gray-400\">\n                  Available amount:{\" \"}\n                </span>\n                <span className=\"text-white text-3xl\">\n                  {parseInt(wei2eth(balance))}\n                </span>\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\n              </div>\n              <div className=\"rounded-md border-2 border-primary p-2 my-2 flex justify-between items-center\">\n                <select\n                  value={stakingOptionState}\n                  onChange={onStakeOptionSelectChanged}\n                  className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                >\n                  {fixedStakingOption.map((option, index) => (\n                    <option key={index} value={index}>\n                      Option {index + 1} :{parseFloat(option.periodInDays)}\n                    </option>\n                  ))}\n                  ;\n                </select>\n              </div>\n              <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\n                <input\n                  type=\"number\"\n                  placeholder=\"MMPRO To Stake\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                />\n                <Button\n                  onClick={() => stake()}\n                  className=\"flex flex-row items-center justify-center\"\n                >\n                  {actionLoading === APPROVELOADING ||\n                  actionLoading === STAKELOADING ? (\n                    <Spinner size={30} />\n                  ) : (\n                    <>\n                      <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\n                      <span className=\"w-36\">\n                        {wei2eth(allowance) < BigInt(amount)\n                          ? \"Approve\"\n                          : \"Stake\"}\n                      </span>{\" \"}\n                    </>\n                  )}\n                </Button>\n              </div>\n            </div>\n          </BorderCard>\n\n          <BorderCard title=\"Time to stake\">\n            <div className=\"flex flex-col pt-8 px-2 text-center\">\n              {calcUnstakeTime(firstUnstakeTime)}\n            </div>\n          </BorderCard>\n        </div>\n      )}\n    </div>\n  );\n}\n","/* eslint-disable no-undef */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../components/common/Button\";\r\nimport BorderCard from \"../../components/common/BorderCard\";\r\nimport Spinner from \"../../components/common/Spinner\";\r\nimport { useFlexibleStaking, useMMProContract } from \"../../hooks/useContracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport {\r\n  getFlexibleStakingAddress,\r\n  getMMProAddress,\r\n} from \"../../utils/getAddress\";\r\nimport { wei2eth } from \"../../utils/common\";\r\nimport fromExponential from \"from-exponential\";\r\n\r\nconst NOLOADING = -1;\r\nconst STAKELOADING = 1;\r\nconst UNSTAKELOADING = 2;\r\nconst CLAIMLOADING = 3;\r\nconst APPROVELOADING = 4;\r\n\r\nexport default function FlexibleBox(props) {\r\n  const { selectedTokenContract, selectedTokenAddr } = props;\r\n  const { active, account } = useWeb3React();\r\n  const flexibleContract = useFlexibleStaking();\r\n  const MMProContract = useMMProContract();\r\n\r\n  const [balance, setBalance] = useState(0);\r\n  const [stakedByUser, setStakedByUser] = useState(0);\r\n  const [totalRewards, setTotalRewards] = useState(0);\r\n  const [unstakeList, setUnstakeList] = useState([]);\r\n  const [totalStaked, setTotalStaked] = useState(0);\r\n  const [initLoading, setInitLoading] = useState(false);\r\n  const [actionLoading, setActionLoading] = useState(NOLOADING);\r\n  const [optionsState, setOptionsState] = useState(0);\r\n  const [allowance, setAllowance] = useState(0);\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      setInitLoading(true);\r\n      await initFlexibleBalance();\r\n      setInitLoading(false);\r\n    };\r\n    if (active) {\r\n      init();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [active]);\r\n\r\n  const handleUnstakeOption = (event) => {\r\n    setOptionsState(event.target.value);\r\n  };\r\n\r\n  const initFlexibleBalance = async () => {\r\n    const tmpBalance = await selectedTokenContract.methods\r\n      .balanceOf(account)\r\n      .call();\r\n    const stakedByUserArray = await flexibleContract.methods\r\n      .getUserStakes(account)\r\n      .call();\r\n    const totalStaked = (\r\n      await flexibleContract.methods.tokenStakeInfo(selectedTokenAddr).call()\r\n    ).totalStaked;\r\n    const allowance = await MMProContract.methods\r\n      .allowance(account, getFlexibleStakingAddress())\r\n      .call();\r\n\r\n    var sumOfStaked = 0;\r\n    var unstakeLists = [];\r\n    var sumTotalRewards = 0;\r\n    for (var i = 0; i < stakedByUserArray.length; i++) {\r\n      const rewards = await flexibleContract.methods\r\n        .calcRewardsByIndex(account, i)\r\n        .call();\r\n      sumTotalRewards += parseInt(rewards);\r\n      if (stakedByUserArray[i].amount > 0) {\r\n        unstakeLists.push({ id: i, amount: stakedByUserArray[i].amount });\r\n      }\r\n      if (stakedByUserArray[i].stakeToken === selectedTokenAddr) {\r\n        sumOfStaked += parseInt(stakedByUserArray[i].amount);\r\n      }\r\n    }\r\n    setAllowance(BigInt(allowance));\r\n    setTotalStaked(totalStaked);\r\n    setBalance(BigInt(tmpBalance));\r\n    setStakedByUser(sumOfStaked);\r\n    setTotalRewards(sumTotalRewards);\r\n    setUnstakeList(unstakeLists);\r\n  };\r\n\r\n  const approve = async () => {\r\n    const amount2eth = fromExponential(10 ** 10 * 10 ** 18);\r\n    setActionLoading(APPROVELOADING);\r\n    await MMProContract.methods\r\n      .approve(getFlexibleStakingAddress(), amount2eth)\r\n      .send({ from: account });\r\n    await initFlexibleBalance();\r\n    setActionLoading(NOLOADING);\r\n  };\r\n\r\n  const stake = async () => {\r\n    setActionLoading(STAKELOADING);\r\n    if (amount === 0 || BigInt(amount) > wei2eth(balance)) {\r\n      return;\r\n    }\r\n    const amount2eth = fromExponential(amount * 10 ** 18);\r\n    try {\r\n      const allowance = await MMProContract.methods\r\n        .allowance(account, getFlexibleStakingAddress())\r\n        .call();\r\n      if (BigInt(allowance) < BigInt(amount2eth)) {\r\n        await approve();\r\n      }\r\n      await flexibleContract.methods\r\n        .stake(getMMProAddress(), amount2eth)\r\n        .send({ from: account });\r\n      await initFlexibleBalance();\r\n    } catch (e) {\r\n      if (e.code !== 4001) {\r\n        console.log(e);\r\n      }\r\n      console.log(e);\r\n    }\r\n    setActionLoading(NOLOADING);\r\n  };\r\n\r\n  const unstake = async () => {\r\n    if (stakedByUser === 0) {\r\n      return;\r\n    }\r\n    setActionLoading(UNSTAKELOADING);\r\n    try {\r\n      await flexibleContract.methods\r\n        .withdrawAllWithRewards(optionsState)\r\n        .send({ from: account });\r\n      await initFlexibleBalance();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setActionLoading(NOLOADING);\r\n  };\r\n\r\n  const withdrawEarnings = async () => {\r\n    if (totalRewards === 0) {\r\n      return;\r\n    }\r\n    setActionLoading(CLAIMLOADING);\r\n    try {\r\n      const length = unstakeList.length;\r\n      for (var i = 0; i < length; i++) {\r\n        await flexibleContract.methods\r\n          .claimRewards(unstakeList[i].id)\r\n          .send({ from: account });\r\n      }\r\n      await initFlexibleBalance();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setActionLoading(NOLOADING);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {initLoading && <>Loading...</>}\r\n      {!active && <>Connet Wallet </>}\r\n      {!initLoading && active && (\r\n        <div className=\"grid grid-col-1 md:grid-cols-2 gap-6 w-full p-2\">\r\n          <BorderCard title=\"Your / Total Staked MMPRO\">\r\n            <div className=\"flex flex-col pt-8 pb-4 text-white\">\r\n              <div className=\"text-center\">\r\n                <span className=\"text-white text-2xl ml-2\">Yours</span>\r\n                <span className=\"text-white text-5xl\">\r\n                  {parseFloat(wei2eth(stakedByUser)).toFixed(2)}\r\n                </span>\r\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\r\n                <br />\r\n                <span className=\"text-white text-2xl ml-2\">Total</span>\r\n                <span className=\"text-white text-5xl\">\r\n                  {parseFloat(wei2eth(totalStaked)).toFixed(2)}\r\n                </span>\r\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                {parseFloat(\r\n                  (parseFloat(totalStaked) / parseFloat(balance.toString())) *\r\n                    parseInt(100)\r\n                ).toFixed(5)}\r\n                %\r\n              </div>\r\n              <div className=\"text-center\">of total supply</div>\r\n            </div>\r\n          </BorderCard>\r\n\r\n          <BorderCard title=\"Your Earnings\">\r\n            <div className=\"flex flex-col pt-8 px-2\">\r\n              <div className=\"text-center pb-8\">\r\n                <span className=\"text-white text-5xl\">\r\n                  {parseFloat(wei2eth(totalRewards)).toFixed(2)}\r\n                </span>\r\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\r\n              </div>\r\n              <div className=\"flex flex-row justify-center\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"flex flex-row items-center justify-center w-48\"\r\n                  onClick={() => withdrawEarnings()}\r\n                  disabled={actionLoading === CLAIMLOADING}\r\n                >\r\n                  {actionLoading === CLAIMLOADING ? (\r\n                    <Spinner size={30} />\r\n                  ) : (\r\n                    <>\r\n                      <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\r\n                      <span className=\"w-32\">CLAIM ALL</span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </BorderCard>\r\n\r\n          <BorderCard title=\"Staking\">\r\n            <div className=\"flex flex-col pt-8 px-2\">\r\n              <div className=\"text-center pb-4\">\r\n                <span className=\"text-lg text-gray-400\">\r\n                  Available amount:{\" \"}\r\n                </span>\r\n                <span className=\"text-white text-3xl\">\r\n                  {wei2eth(balance).toString()}\r\n                </span>\r\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\r\n              </div>\r\n              <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"MMPRO To Stake\"\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                  className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                />\r\n                <Button\r\n                  onClick={() => {\r\n                    wei2eth(allowance) < BigInt(amount) ? approve() : stake();\r\n                  }}\r\n                  className=\"flex flex-row items-center justify-center\"\r\n                  disabled={\r\n                    actionLoading === STAKELOADING ||\r\n                    actionLoading === APPROVELOADING\r\n                  }\r\n                >\r\n                  {actionLoading === STAKELOADING ||\r\n                  actionLoading === APPROVELOADING ? (\r\n                    <Spinner size={30} />\r\n                  ) : (\r\n                    <>\r\n                      <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\r\n                      <span className=\"w-36\">\r\n                        {wei2eth(allowance) < BigInt(amount)\r\n                          ? \"Approve\"\r\n                          : \"Stake\"}\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </BorderCard>\r\n\r\n          <BorderCard title=\"Unstaking\">\r\n            <div className=\"flex flex-col pt-8 px-2\">\r\n              <div className=\"text-center pb-4\">\r\n                <span className=\"text-lg text-gray-400\">\r\n                  Available to unstake:{\" \"}\r\n                </span>\r\n                <span className=\"text-white text-3xl\">\r\n                  {parseFloat(wei2eth(stakedByUser)).toFixed(2)}\r\n                </span>\r\n                <span className=\"text-white text-2xl ml-2\">MMPRO</span>\r\n              </div>\r\n              <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                <select\r\n                  value={optionsState}\r\n                  onChange={handleUnstakeOption}\r\n                  className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                >\r\n                  {unstakeList &&\r\n                    unstakeList.map((unstake) => (\r\n                      <option key={unstake.id} value={unstake.id}>\r\n                        {parseFloat(wei2eth(unstake.amount))}\r\n                      </option>\r\n                    ))}\r\n                  ;\r\n                </select>\r\n                {/* <input\r\n                      type=\"number\"\r\n                      placeholder=\"MMPRO To Unstake\"\r\n                      value={unstakeAmount}\r\n                      onChange={(e) => setUnstakeAmount(e.target.value)}\r\n                      className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                    /> */}\r\n                <Button\r\n                  onClick={() => unstake()}\r\n                  className=\"flex flex-row items-center w-48 justify-center\"\r\n                  disabled={actionLoading === UNSTAKELOADING}\r\n                >\r\n                  {actionLoading === UNSTAKELOADING ? (\r\n                    <Spinner size={30} />\r\n                  ) : (\r\n                    <>\r\n                      <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\r\n                      <span className=\"w-36\">UNSTAKE ALL</span>\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </BorderCard>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { AiOutlineDown, AiOutlineUp } from \"react-icons/ai\";\nimport { useMMProContract } from \"../../hooks/useContracts\";\nimport { getMMProAddress } from \"../../utils/getAddress\";\nimport FlexibleBox from \"./FlexibleBox\";\n\nexport default function SelectFlexibleToken(props) {\n  const { stakeTokenBoxList, flexibleAPY } = props;\n  const [flexibleStakeDowned, setFlexibleStakeDowned] = useState(false);\n  const MMProContract = useMMProContract();\n  return (\n    <>\n      {stakeTokenBoxList.map((stakeTokenBox, index) => (\n        <div key={index} className=\"w-auto my-2 rounded-lg card-bg p-4\">\n          <div\n            className=\"flex justify-between items-center\"\n            onClick={() => {\n              setFlexibleStakeDowned(!flexibleStakeDowned);\n            }}\n          >\n            <div className=\"flex justify-start\">\n              <img\n                src={stakeTokenBox[\"img\"]}\n                width=\"60\"\n                alt={stakeTokenBox[\"name\"]}\n              />\n              <div className=\"flex flex-col mx-4\">\n                <div className=\"flex flex-row justify-between\">\n                  <div className=\"font-extrabold\">{stakeTokenBox[\"name\"]}</div>\n                </div>\n                <div className=\"flex flex-row justify-between\">\n                  <div>TVL: </div>\n                  <div className=\"font-black\">\n                    {stakeTokenBox[\"TVL\"] / 1000000000000000000}{\" \"}\n                    {stakeTokenBox[\"name\"]}\n                  </div>\n                </div>\n                <div className=\"flex flex-row justify-between\">\n                  <div>APY: </div>\n                  <div className=\"font-extrabold\">\n                    {flexibleAPY.length > 0 ? flexibleAPY[index][\"APY\"] : 0} %\n                  </div>\n                </div>\n              </div>\n            </div>\n            {flexibleStakeDowned ? <AiOutlineUp /> : <AiOutlineDown />}\n          </div>\n          {flexibleStakeDowned && (\n            <FlexibleBox\n              selectedTokenContract={MMProContract}\n              selectedTokenAddr={getMMProAddress()}\n            />\n          )}\n          {/* <Button onClick={() => setCurStakeTokenID(index)}>Stake</Button> */}\n        </div>\n      ))}\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from \"react\";\nimport MMPRO from \"../../contracts/MMPRO.json\";\nimport { getMMProAddress } from \"../../utils/getAddress\";\nimport { useFlexibleStaking } from \"../../hooks/useContracts\";\nimport SelectFlexibleToken from \"./SelectFlexibleToken\";\n\nconst stakeTokenDataList = [\n  {\n    name: \"MMPro\",\n    abi: MMPRO.abi,\n    addr: getMMProAddress(),\n    img: \"/images/mmpro.png\",\n  },\n  // {\n  //   name: \"Busd\",\n  //   abi: BUSD.abi,\n  //   addr: getBUSDAddress(),\n  //   img: \"/images/busd.png\",\n  // },\n];\n\nexport default function FlexibleLayout(props) {\n  const { flexibleAPY } = props;\n  const flexibleContract = useFlexibleStaking();\n  const [initLoading, setInitLoading] = useState(false);\n  const [stakeTokenBoxList, setStakeTokenBoxList] = useState(Array);\n  // const [rewardAmount, setRewardAmount] = useState(0);\n\n  const init = async () => {\n    var tempStakeList = [];\n    for (var i = 0; i < stakeTokenDataList.length; i++) {\n      var stakeTokenInfo = {};\n      stakeTokenInfo[\"name\"] = stakeTokenDataList[i][\"name\"];\n      stakeTokenInfo[\"img\"] = stakeTokenDataList[i][\"img\"];\n      stakeTokenInfo[\"addr\"] = stakeTokenDataList[i][\"addr\"];\n      stakeTokenInfo[\"TVL\"] = (\n        await flexibleContract.methods\n          .tokenStakeInfo(stakeTokenDataList[i][\"addr\"])\n          .call()\n      )[2];\n      stakeTokenInfo[\"emission\"] = (\n        await flexibleContract.methods\n          .tokenStakeInfo(stakeTokenDataList[i][\"addr\"])\n          .call()\n      )[1];\n      tempStakeList.push({ ...stakeTokenInfo, id: i });\n    }\n    setStakeTokenBoxList(tempStakeList);\n  };\n\n  useEffect(() => {\n    const initialize = async () => {\n      setInitLoading(true);\n      await init();\n      setInitLoading(false);\n    };\n    initialize();\n  }, []);\n\n  return (\n    <div className=\"grid grid-col-1 gap-6 w-full\">\n      {/* className=\"transparentCard justify-between w-auto mx-12\" */}\n      <div className=\"text-center\">\n        {initLoading === true ? (\n          <div className=\"mt-10\">Loading...</div>\n        ) : (\n          <>\n            <SelectFlexibleToken\n              stakeTokenBoxList={stakeTokenBoxList}\n              flexibleAPY={flexibleAPY}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useWeb3React } from \"@web3-react/core\";\nimport React, { useState, useEffect } from \"react\";\nimport TabComp from \"./TabComp\";\nimport FixedLayout from \"./FixedStake/FixedLayout\";\nimport FlexibleLayout from \"./FlexibleStake/FlexibleLayout\";\nimport numeral from \"numeral\";\nimport { useFixedStaking, useFlexibleStaking } from \"../hooks/useContracts\";\nimport { getMMProAddress } from \"../utils/getAddress\";\nimport { calcAPY } from \"../utils/common\";\nimport MMPRO from \"../contracts/MMPRO.json\";\n\nconst stakeTokenDataList = [\n  {\n    name: \"MMPro\",\n    abi: MMPRO.abi,\n    addr: getMMProAddress(),\n    img: \"/images/mmpro.png\",\n  },\n  // {\n  //   name: \"Busd\",\n  //   abi: BUSD.abi,\n  //   addr: getBUSDAddress(),\n  //   img: \"/images/busd.png\",\n  // },\n];\n\nexport default function Staking(props) {\n  const { active, account } = useWeb3React();\n  const fixedStakeContract = useFixedStaking();\n  const flexibleContract = useFlexibleStaking();\n  const { price, totalSupply, mmcap } = props;\n  const [fixedAPY, setFixedAPY] = useState(0);\n  const [flexibleAPY, setFlexibleAPY] = useState(Array);\n  const [tabIndex, setTabIndex] = useState(1);\n\n  const calcFixedAPY = async () => {\n    const fixedAPY = await calcAPY(\n      fixedStakeContract,\n      getMMProAddress(),\n      1,\n      false,\n      account\n    );\n    setFixedAPY(fixedAPY);\n  };\n\n  const calcFlexibleAPY = async () => {\n    var tempStakeList = [];\n    for (var i = 0; i < stakeTokenDataList.length; i++) {\n      var stakeTokenInfo = {};\n      stakeTokenInfo[\"name\"] = stakeTokenDataList[i][\"name\"];\n      stakeTokenInfo[\"img\"] = stakeTokenDataList[i][\"img\"];\n      stakeTokenInfo[\"addr\"] = stakeTokenDataList[i][\"addr\"];\n      stakeTokenInfo[\"TVL\"] = (\n        await flexibleContract.methods\n          .tokenStakeInfo(stakeTokenDataList[i][\"addr\"])\n          .call()\n      )[2];\n      stakeTokenInfo[\"emission\"] = (\n        await flexibleContract.methods\n          .tokenStakeInfo(stakeTokenDataList[i][\"addr\"])\n          .call()\n      )[1];\n      tempStakeList.push({ ...stakeTokenInfo, id: i });\n    }\n\n    let tempAPY = [];\n    for (i = 0; i < tempStakeList.length; i++) {\n      const apy = await calcAPY(\n        flexibleContract,\n        getMMProAddress(),\n        tempStakeList[i][\"emission\"],\n        true,\n        account\n      );\n      console.log(apy);\n      tempAPY.push({ id: i, APY: apy });\n    }\n    setFlexibleAPY(tempAPY);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      await calcFixedAPY();\n      await calcFlexibleAPY();\n    };\n    if (active) {\n      init();\n    }\n  }, [active]);\n\n  return (\n    <div className=\"container mx-auto pb-18 px-4 force-height\">\n      <div className=\"w-full py-6 text-center\">\n        {/* <dov className=\"flex flex-row justify-around\"> */}\n        <div className=\"flex items-center justify-center md:flex-row flex-col w-full mb-24 mt-6\">\n          <div className=\"text-left\">\n            <p className=\"mb-2 font-semibold md:text-6xl text-5xl\">Staking</p>\n            <p className=\"text-2xl mb-2 font-light\">\n              Connect your wallet &amp; stake your MMPRO tokens to earn extra\n              MMPRO tokens\n            </p>\n          </div>\n          <div>\n            <div className=\"transparentCard justify-between md:w-80 w-60\">\n              <h1> MMPRO price</h1>\n              <div className=\"flex items-center justify-center flex-row\">\n                <p>{price.toFixed(4)}</p>\n                <h1>&nbsp;USD</h1>\n              </div>\n            </div>\n            <div className=\"transparentCard justify-between md:w-80 w-60\">\n              <h1> MMPRO marketcap</h1>\n              <div className=\"flex items-center justify-center flex-row\">\n                <p>{numeral(mmcap).format(\"0.0a\")}</p>\n                <h1>&nbsp;USD</h1>\n              </div>\n            </div>\n            <div className=\"transparentCard justify-between md:w-80 w-60\">\n              <h1> MMPRO supply</h1>\n              <div className=\"flex items-center justify-center flex-row\">\n                <p>{numeral(totalSupply).format(\"0.00a\")}</p>\n                <h1>&nbsp;MMPRO</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <TabComp\n        tabIndex={tabIndex}\n        setTabIndex={setTabIndex}\n        fixedAPY={fixedAPY}\n      />\n      {tabIndex === 1 && <FlexibleLayout flexibleAPY={flexibleAPY} />}\n      {tabIndex === 2 && <FixedLayout />}\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport {\r\n  useMMProContract,\r\n  useBUSDContract,\r\n  useWeb3,\r\n} from \"./hooks/useContracts\";\r\nimport { getLPAddress } from \"./utils/getAddress\";\r\nimport { getBalanceOfToken, getTotalSupply } from \"./hooks/contractsFunction\";\r\nimport Staking from \"./pages/Staking\";\r\nimport { injected } from \"./wallet\";\r\n\r\nconst App = () => {\r\n  const { active, activate, networkError } = useWeb3React();\r\n  const [mmproBalance, setMMProBalance] = useState(0);\r\n  const [busdBalance, setBUSDBalance] = useState(0);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [mmCap, setMMCap] = useState(0);\r\n  var web3 = useWeb3();\r\n  const MMProContract = useMMProContract(web3);\r\n  const BUSDContract = useBUSDContract(web3);\r\n  const price = mmproBalance && busdBalance && busdBalance / mmproBalance;\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      setMMProBalance(await getBalanceOfToken(MMProContract, getLPAddress()));\r\n      setBUSDBalance(await getBalanceOfToken(BUSDContract, getLPAddress()));\r\n      const total = await getTotalSupply(MMProContract);\r\n      setTotalSupply((total - 600000000000000000000000) / 1000000000000000000);\r\n      const mMcap =\r\n        (price * (total - 600000000000000000000000)) / 1000000000000000000;\r\n      setMMCap(mMcap);\r\n    };\r\n    init();\r\n  });\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized && !active && !networkError) {\r\n        activate(injected);\r\n      }\r\n    });\r\n  }, [activate, networkError]);\r\n\r\n  return (\r\n    <div className=\"w-full overflow-hidden main-gradient\">\r\n      <Header />\r\n      <Staking price={price} totalSupply={totalSupply} mmcap={mmCap} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./styles/tailwind.css\";\r\nimport \"./styles/index.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport App from \"./App\";\r\nimport { getLibrary } from \"./wallet\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  </BrowserRouter>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}